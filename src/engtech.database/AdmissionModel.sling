import jk.sql
import jk.mysql
import jk.time

class:

const TABLENAME = "admission"

model TableModel static
{
    adm_id as int
    student_id as int
    sy as string
    sem as string
    course as string
    created_at as long
    updated_at as long
}

func createTable as SQLTableInfo
{
    var tbl = SQLTableInfo.forName(TABLENAME)

    tbl.addIntegerKeyColumn("adm_id")
    tbl.addIntegerColumn("student_id")
    tbl.addStringColumn("sem")
    tbl.addStringColumn("sy")
    tbl.addStringColumn("course")
    tbl.addLongColumn("created_at")
    tbl.addLongColumn("updated_at")

    return tbl
}

func createAdmission(db as MySQLDatabase,  dataModel as TableModel) as TableModel
{
    assert dataModel
    dataModel.setCreated_atValue(SystemClock.asUTCSeconds())
    assert db.executeSync(db.prepareInsertStatementSync(TABLENAME, dataModel.toDynamicMap()))
    return dataModel
}
func getAllAdmission(db as MySQLDatabase) as DynamicMap
{
    var v = new vector<TableModel>
    var it = assert db.querySync(db.prepareQueryAllStatementSync(TABLENAME)):
        return null
    while it{
        var o = it.next()
        if not o:
            break
        var row = TableModel.forJsonObject(o)
        if not row:
            continue
        v += row
    }
    var data = new DynamicMap()
    data.setObject("records", v)
    return data
}
